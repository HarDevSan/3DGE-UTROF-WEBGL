//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z11interpolatei
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 8 .b8 texCoords[8];
.global .align 4 .f32 triAlpha;
.global .align 1 .b8 vertex_buffer[1];
.global .align 1 .b8 index_buffer[1];
.global .align 4 .u32 bounceFlag;
.global .align 1 .b8 areaLights[1];
.global .align 4 .u32 firstAlphaTriangle;
.global .align 1 .b8 vertex_buffer_uv[1];
.global .align 1 .b8 triangleAlphaIDs[1];
.global .align 1 .b8 alphaTextures[1];
.global .align 4 .b8 ray[36];
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9texCoordsE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8triAlphaE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10bounceFlagE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo18firstAlphaTriangleE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9texCoordsE[7] = {102, 108, 111, 97, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8triAlphaE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename10bounceFlagE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename18firstAlphaTriangleE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename3rayE[4] = {82, 97, 121, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9texCoordsE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8triAlphaE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10bounceFlagE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum18firstAlphaTriangleE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 16 .b8 _ZN21rti_internal_semantic9texCoordsE[20] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 116, 101, 120, 67, 111, 111, 114, 100, 115, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic8triAlphaE[19] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 116, 114, 105, 65, 108, 112, 104, 97, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic10bounceFlagE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic18firstAlphaTriangleE[1];
.global .align 16 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9texCoordsE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8triAlphaE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10bounceFlagE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation18firstAlphaTriangleE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];

.visible .entry _Z11interpolatei(
	.param .u32 _Z11interpolatei_param_0
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<97>;
	.reg .b32 	%r<51>;
	.reg .b64 	%rd<107>;


	ld.param.u32 	%r5, [_Z11interpolatei_param_0];
	// inline asm
	call (%f17, %f18), _rt_get_triangle_barycentrics, ();
	// inline asm
	cvt.s64.s32	%rd7, %r5;
	mov.u64 	%rd11, index_buffer;
	cvta.global.u64 	%rd6, %rd11;
	mov.u32 	%r6, 1;
	mov.u32 	%r7, 12;
	mov.u64 	%rd10, 0;
	// inline asm
	call (%rd5), _rt_buffer_get_64, (%rd6, %r6, %r7, %rd7, %rd10, %rd10, %rd10);
	// inline asm
	ld.u32 	%r1, [%rd5];
	ld.u32 	%r2, [%rd5+4];
	ld.u32 	%r3, [%rd5+8];
	ld.global.u32 	%r4, [firstAlphaTriangle];
	setp.gt.s32	%p1, %r4, %r5;
	mov.f32 	%f94, 0f3F800000;
	@%p1 bra 	BB0_2;

	cvt.s64.s32	%rd20, %r1;
	sub.s32 	%r26, %r5, %r4;
	cvt.s64.s32	%rd14, %r26;
	mov.u64 	%rd57, triangleAlphaIDs;
	cvta.global.u64 	%rd13, %rd57;
	mov.u32 	%r22, 4;
	// inline asm
	call (%rd12), _rt_buffer_get_64, (%rd13, %r6, %r22, %rd14, %rd10, %rd10, %rd10);
	// inline asm
	ld.u32 	%rd58, [%rd12];
	cvt.u32.u64	%r27, %rd58;
	shr.u32 	%r28, %r27, 16;
	mov.u64 	%rd59, vertex_buffer_uv;
	cvta.global.u64 	%rd19, %rd59;
	mov.u32 	%r15, 8;
	// inline asm
	call (%rd18), _rt_buffer_get_64, (%rd19, %r6, %r15, %rd20, %rd10, %rd10, %rd10);
	// inline asm
	ld.v2.f32 	{%f20, %f21}, [%rd18];
	cvt.s64.s32	%rd26, %r2;
	// inline asm
	call (%rd24), _rt_buffer_get_64, (%rd19, %r6, %r15, %rd26, %rd10, %rd10, %rd10);
	// inline asm
	ld.v2.f32 	{%f24, %f25}, [%rd24];
	cvt.s64.s32	%rd32, %r3;
	// inline asm
	call (%rd30), _rt_buffer_get_64, (%rd19, %r6, %r15, %rd32, %rd10, %rd10, %rd10);
	// inline asm
	mov.f32 	%f28, 0f3F800000;
	sub.f32 	%f29, %f28, %f17;
	sub.f32 	%f30, %f29, %f18;
	mul.f32 	%f31, %f17, %f24;
	mul.f32 	%f32, %f17, %f25;
	fma.rn.f32 	%f33, %f30, %f20, %f31;
	fma.rn.f32 	%f34, %f30, %f21, %f32;
	ld.v2.f32 	{%f35, %f36}, [%rd30];
	fma.rn.f32 	%f39, %f18, %f35, %f33;
	fma.rn.f32 	%f40, %f18, %f36, %f34;
	abs.f32 	%f41, %f39;
	cvt.rmi.f32.f32	%f42, %f41;
	sub.f32 	%f43, %f41, %f42;
	abs.f32 	%f44, %f40;
	cvt.rmi.f32.f32	%f45, %f44;
	sub.f32 	%f46, %f44, %f45;
	and.b64  	%rd38, %rd58, 65535;
	mov.u64 	%rd60, alphaTextures;
	cvta.global.u64 	%rd37, %rd60;
	// inline asm
	call (%rd36), _rt_buffer_get_64, (%rd37, %r6, %r22, %rd38, %rd10, %rd10, %rd10);
	// inline asm
	ld.u32 	%r18, [%rd36];
	mov.u32 	%r24, 2;
	// inline asm
	call (%rd42, %rd43, %rd44, %rd45), _rt_buffer_get_id_size_64, (%r18, %r24, %r6);
	// inline asm
	cvt.rn.f32.u64	%f47, %rd42;
	mul.f32 	%f48, %f43, %f47;
	cvt.rzi.u32.f32	%r29, %f48;
	cvt.rn.f32.u64	%f49, %rd43;
	mul.f32 	%f50, %f46, %f49;
	cvt.rzi.u32.f32	%r30, %f50;
	// inline asm
	call (%rd46), _rt_buffer_get_64, (%rd37, %r6, %r22, %rd38, %rd10, %rd10, %rd10);
	// inline asm
	ld.u32 	%r23, [%rd46];
	cvt.u64.u32	%rd53, %r29;
	cvt.u64.u32	%rd54, %r30;
	// inline asm
	call (%rd52), _rt_buffer_get_id_64, (%r23, %r24, %r6, %rd53, %rd54, %rd10, %rd10);
	// inline asm
	ld.u8 	%r31, [%rd52];
	and.b32  	%r32, %r31, %r28;
	setp.eq.s32	%p2, %r32, 0;
	selp.f32	%f94, 0f00000000, 0f3F800000, %p2;

BB0_2:
	st.global.f32 	[triAlpha], %f94;
	cvt.s64.s32	%rd63, %r1;
	mov.u64 	%rd67, vertex_buffer;
	cvta.global.u64 	%rd62, %rd67;
	mov.u32 	%r34, 32;
	// inline asm
	call (%rd61), _rt_buffer_get_64, (%rd62, %r6, %r34, %rd63, %rd10, %rd10, %rd10);
	// inline asm
	ld.v2.f32 	{%f95, %f52}, [%rd61+24];
	setp.geu.f32	%p3, %f95, 0f00000000;
	@%p3 bra 	BB0_6;

	ld.global.u32 	%r35, [bounceFlag];
	cvt.rn.f32.s32	%f53, %r35;
	setp.neu.f32	%p4, %f53, 0f00000000;
	@%p4 bra 	BB0_6;

	div.rn.f32 	%f54, %f95, 0f41200000;
	cvt.rzi.s32.f32	%r38, %f54;
	neg.s32 	%r39, %r38;
	cvt.s64.s32	%rd70, %r39;
	mov.u64 	%rd74, areaLights;
	cvta.global.u64 	%rd69, %rd74;
	mov.u32 	%r37, 16;
	// inline asm
	call (%rd68), _rt_buffer_get_64, (%rd69, %r6, %r37, %rd70, %rd10, %rd10, %rd10);
	// inline asm
	ld.f32 	%f55, [%rd68+8];
	setp.geu.f32	%p5, %f55, 0f00000000;
	@%p5 bra 	BB0_6;

	mov.u32 	%r40, 0;
	st.global.u32 	[triAlpha], %r40;

BB0_6:
	cvt.s64.s32	%rd77, %r2;
	// inline asm
	call (%rd75), _rt_buffer_get_64, (%rd62, %r6, %r34, %rd77, %rd10, %rd10, %rd10);
	// inline asm
	ld.v2.f32 	{%f56, %f57}, [%rd75+24];
	cvt.s64.s32	%rd83, %r3;
	// inline asm
	call (%rd81), _rt_buffer_get_64, (%rd62, %r6, %r34, %rd83, %rd10, %rd10, %rd10);
	// inline asm
	mov.f32 	%f58, 0f3F800000;
	sub.f32 	%f59, %f58, %f17;
	sub.f32 	%f11, %f59, %f18;
	setp.lt.f32	%p6, %f52, 0f00000000;
	@%p6 bra 	BB0_8;
	bra.uni 	BB0_7;

BB0_8:
	add.f32 	%f96, %f52, 0f3F800000;
	bra.uni 	BB0_9;

BB0_7:
	ld.v2.f32 	{%f60, %f61}, [%rd81+24];
	mul.f32 	%f64, %f17, %f56;
	mul.f32 	%f65, %f17, %f57;
	fma.rn.f32 	%f66, %f11, %f95, %f64;
	fma.rn.f32 	%f67, %f11, %f52, %f65;
	fma.rn.f32 	%f95, %f18, %f60, %f66;
	fma.rn.f32 	%f96, %f18, %f61, %f67;

BB0_9:
	st.global.v2.f32 	[texCoords], {%f95, %f96};
	// inline asm
	call (%rd88), _rt_buffer_get_64, (%rd62, %r6, %r34, %rd63, %rd10, %rd10, %rd10);
	// inline asm
	ld.f32 	%f68, [%rd88+20];
	ld.f32 	%f69, [%rd88+16];
	ld.f32 	%f70, [%rd88+12];
	// inline asm
	call (%rd94), _rt_buffer_get_64, (%rd62, %r6, %r34, %rd77, %rd10, %rd10, %rd10);
	// inline asm
	ld.f32 	%f71, [%rd94+20];
	ld.f32 	%f72, [%rd94+16];
	ld.f32 	%f73, [%rd94+12];
	// inline asm
	call (%rd100), _rt_buffer_get_64, (%rd62, %r6, %r34, %rd83, %rd10, %rd10, %rd10);
	// inline asm
	mul.f32 	%f74, %f17, %f73;
	mul.f32 	%f75, %f17, %f72;
	mul.f32 	%f76, %f17, %f71;
	fma.rn.f32 	%f77, %f11, %f70, %f74;
	fma.rn.f32 	%f78, %f11, %f69, %f75;
	fma.rn.f32 	%f79, %f11, %f68, %f76;
	ld.f32 	%f80, [%rd100+20];
	ld.f32 	%f81, [%rd100+16];
	ld.f32 	%f82, [%rd100+12];
	fma.rn.f32 	%f83, %f18, %f82, %f77;
	fma.rn.f32 	%f84, %f18, %f81, %f78;
	fma.rn.f32 	%f85, %f18, %f80, %f79;
	mul.f32 	%f86, %f84, %f84;
	fma.rn.f32 	%f87, %f83, %f83, %f86;
	fma.rn.f32 	%f88, %f85, %f85, %f87;
	sqrt.rn.f32 	%f89, %f88;
	rcp.rn.f32 	%f90, %f89;
	mul.f32 	%f91, %f90, %f83;
	mul.f32 	%f92, %f90, %f84;
	mul.f32 	%f93, %f90, %f85;
	st.global.f32 	[normal], %f91;
	st.global.f32 	[normal+4], %f92;
	st.global.f32 	[normal+8], %f93;
	ret;
}


